#!/bin/bash
# 
# This script is prepared to notify user that the simulation is finished,
# The user can choose between getting screen notification, and emails.
#  
# --------------------------------------------------------------------------
# Copyright(C) 2018 Florida Institute of Technology
# Copyright(C) 2018 Peyman Taeb & Robert J Weaver
#
# This program is prepared as a part of the Multi-stage tool.
# The Multi-stage tool is an open-source software providing the copyright
# holders the rights to run, study, change, and distribute the software under
# the terms and conditions of the third version of the GNU General Public
# License (GPLv3) as published in 2007.
#
# Although careful considerations are given to the development of the
# Multi-stage tool with the aim of usefulness and helpfulness, we do not
# make any warranty express or implied, do not assume any responsibility for
# the accuracy, completeness, or usefulness of any components and outcomes.
#
# The terms and conditions of the GPL are available to anybody receiving a
# copy of the Multi-stage tool. It can be also found in
# <http://www.gnu.org/licenses/gpl.html>. 
# --------------------------------------------------------------------------

# Getting options
cycleDIR=$1
CONFIG=$2
SYSLOG=$3
PHASE=$4
RUNDIR=$5

# Passing model parameters to the environment
. ${CONFIG}

# defining log message
logMessage()
{ DATETIME=`date +'%Y-%h-%d-T%H:%M:%S'`
  MSG="[${DATETIME}] INFO: $@"
  echo ${MSG} >> ${SYSLOG}
}
 
# simply return if we are not supposed to send out emails
if [[ $EMAILNOTIFY != yes && $EMAILNOTIFY != YES ]]; then
   exit
fi
 
# simply return if there are no email addresses to send email to
if [[ $notify_list = null ]]; then
   exit
fi

# Getting the size of the running dir
size=`du -sm ${mainDIR}/${ID}/${cycleDIR} | cut -f1`
model="ADCIRC"
if [[ $WAVES == on ]]; then
   model="ADCIRC + SWAN"
fi
COMMA_SEP_LIST=${notify_list// /,}
case $PHASE in
#
# ---------------- Simple notification ----------------
"newcycle")
#
cat <<END > ${RUNDIR}/new_advisory.txt 2>> ${SYSLOG}

"The simulation with the ID $ID has been started"
 ----------------------------------------------------------------------------------------
 The model system: ${model}
 Coastal estuary: ${estuary}
 Start date and time: `date +'%Y-%h-%d   %H:%M:%S'`
 Platform: $platform
 Path to run dir:  ${mainDIR}/${ID}/${cycleDIR}
 ----------------------------------------------------------------------------------------

END
    logMessage "Sending 'new cycle (${cycleDIR}) detected' email to the following addresses: $COMMA_SEP_LIST."
    cat $STORMDIR/new_advisory.txt | mail -s "Forecast run of cycle ${cycleDIR} started on $platform" "$COMMA_SEP_LIST" 2>> ${SYSLOG} 2>&1
;;
#
"results")
#
cat <<END > ${RUNDIR}/notify.txt
 
 "The simulation with the ID $ID has been completed"
 ----------------------------------------------------------------------------------------
 The model system: ${model}
 Coastal estuary: ${estuary}
 End date and time: `date +'%Y-%h-%d   %H:%M:%S'`
 Platform: $platform
 Path to results: ${mainDIR}/${ID}/${cycleDIR}
 Run directory size: $size MB
 Wallclock time:  %DAYS% days, %HOURS% hrs, %MIN% min
 ----------------------------------------------------------------------------------------
 
END
#
cat ${RUNDIR}/notify.txt | mail -s "Forecast run of cycle ${cycleDIR} completed by $platform" "$COMMA_SEP_LIST" 2>> ${SYSLOG} 2>&1
;;
esac
